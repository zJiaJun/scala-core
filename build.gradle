buildscript {


}

apply plugin: 'idea'
ext {
	scalaVersion = '2.11.7'
	scalaLibVersion = '2.11'
	akkaGroup = 'com.typesafe.akka'
	akkaVersion = '2.4.1'
	mysqlVersion = '5.1.36'
}

List akka = ["$akkaGroup:akka-actor_$scalaLibVersion:$akkaVersion",
			 "$akkaGroup:akka-remote_$scalaLibVersion:$akkaVersion",
			 "$akkaGroup:akka-contrib_$scalaLibVersion:$akkaVersion",
			 "$akkaGroup:akka-slf4j_$scalaLibVersion:$akkaVersion"]


subprojects {
	apply plugin: 'scala'

	repositories {
		mavenCentral()
	}

	group = 'com.github.zjiajun'
	version = 1.0

	dependencies {
		compile "org.scala-lang:scala-library:$scalaVersion"
		compile akka
		compile "redis.clients:jedis:2.8.0"
		compile "mysql:mysql-connector-java:$mysqlVersion"
		compile "org.json4s:json4s-jackson_$scalaLibVersion:3.2.11"
		compile "org.json4s:json4s-native_$scalaLibVersion:3.2.11"
		compile "com.alibaba:fastjson:1.2.8"
		testCompile 'junit:junit:4.12'
	}

	tasks.withType(ScalaCompile) {
		scalaCompileOptions.additionalParameters = [
		        "-encoding","utf-8",
				"-unchecked"
		]

		configure(scalaCompileOptions.forkOptions) {
			memoryMaximumSize = '1g'
			jvmArgs = ['-Xss2m']
		}
	}
	ScalaCompileOptions.metaClass.daemonServer = true
	ScalaCompileOptions.metaClass.fork = true
	ScalaCompileOptions.metaClass.useAnt = true
	ScalaCompileOptions.metaClass.useCompileDaemon = false
}

project(':core') {
	archivesBaseName = "core"
	jar {
		baseName = 'scala-core'
	}
}

project(':dataguru') {
	archivesBaseName = "dataguru"
	jar {
		baseName = 'scala-dataguru'
	}
}

